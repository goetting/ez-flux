// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`store options children assigning a value to a child on the parent will call $assign of the child 1`] = `
Object {
  "$assign": [Function],
  "$copy": [Function],
  "$emit": [Function],
  "$entries": [Function],
  "$events": Object {
    "change": Array [
      [Function],
    ],
  },
  "$keys": [Function],
  "$off": [Function],
  "$on": [Function],
  "$once": [Function],
  "$reset": [Function],
  "$stringify": [Function],
  "$values": [Function],
  "bar": 1,
  "baz": true,
  "child": Object {
    "$assign": [Function],
    "$copy": [Function],
    "$emit": [Function],
    "$entries": [Function],
    "$events": Object {
      "change": Array [
        [Function],
        [Function],
      ],
    },
    "$keys": [Function],
    "$off": [Function],
    "$on": [Function],
    "$once": [Function],
    "$reset": [Function],
    "$stringify": [Function],
    "$values": [Function],
    "foo": 2,
  },
  "testMethod": [Function],
  "two": undefined,
}
`;

exports[`store options children assigning a value to a child on the parent will call $assign of the child 2`] = `
Object {
  "$assign": [Function],
  "$copy": [Function],
  "$emit": [Function],
  "$entries": [Function],
  "$events": Object {
    "change": Array [
      [Function],
      [Function],
    ],
  },
  "$keys": [Function],
  "$off": [Function],
  "$on": [Function],
  "$once": [Function],
  "$reset": [Function],
  "$stringify": [Function],
  "$values": [Function],
  "foo": 2,
}
`;

exports[`store options initialState should assign a nested initialState to children 1`] = `
Object {
  "child": Object {
    "val1": 11,
    "val2": 12,
    "val3": 13,
  },
  "val1": 11,
  "val2": 12,
  "val3": 13,
}
`;

exports[`store options initialState should assign a nested initialState to children 2`] = `
Object {
  "val1": 11,
  "val2": 12,
  "val3": 13,
}
`;

exports[`store store methods $copy should invoke copy on their children as well 1`] = `
Object {
  "$assign": [Function],
  "$copy": [Function],
  "$emit": [Function],
  "$entries": [Function],
  "$events": Object {},
  "$keys": [Function],
  "$off": [Function],
  "$on": [Function],
  "$once": [Function],
  "$reset": [Function],
  "$stringify": [Function],
  "$values": [Function],
  "baz": "baz",
  "child": Object {
    "$assign": [Function],
    "$copy": [Function],
    "$emit": [Function],
    "$entries": [Function],
    "$events": Object {
      "change": Array [
        [Function],
      ],
    },
    "$keys": [Function],
    "$off": [Function],
    "$on": [Function],
    "$once": [Function],
    "$reset": [Function],
    "$stringify": [Function],
    "$values": [Function],
    "bar": true,
    "deepChild": Object {
      "$assign": [Function],
      "$copy": [Function],
      "$emit": [Function],
      "$entries": [Function],
      "$events": Object {
        "change": Array [
          [Function],
        ],
      },
      "$keys": [Function],
      "$off": [Function],
      "$on": [Function],
      "$once": [Function],
      "$reset": [Function],
      "$stringify": [Function],
      "$values": [Function],
      "foo": true,
    },
  },
}
`;

exports[`store store methods $copy should return a shallow copy of the state 1`] = `
Object {
  "bar": "bar",
  "baz": true,
  "child": Object {
    "foo": true,
  },
  "two": undefined,
}
`;

exports[`store store methods $reset should callReset on its children as well 1`] = `
Object {
  "baz": 1,
  "child": Object {
    "bar": 1,
    "deepChild": Object {
      "foo": 1,
    },
  },
}
`;
